plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.modelmapper:modelmapper:3.0.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	implementation 'org.hibernate:hibernate-core:6.0.0.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

tasks.named('test') {
	useJUnitPlatform()
}

configurations {
    hibernateJpa
}

dependencies {
    hibernateJpa 'org.hibernate:hibernate-core:6.0.0.Final' // ou a versão do Hibernate que você deseja usar
    hibernateJpa 'org.springframework.boot:spring-boot-starter-data-jpa'
}

// Configure o plugin JPA para usar a versão correta do Hibernate
configurations {
    compileOnly {
        extendsFrom hibernateJpa
		canBeResolved=true
    }
}

// Certifique-se de substituir a versão do Hibernate conforme necessário
sourceSets {
    main {
        compileClasspath += configurations.compileOnly
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.compileOnly
}
